generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Package {
  id          String   @id @default(uuid())
  name        String
  subtitle    String
  icon        String
  gradient    String
  bgGradient  String
  borderColor String
  features    String[]
  badge       String
  popular     Boolean  @default(false)
  instant     Boolean  @default(false)
  pricing     Pricing  @relation(fields: [pricingId], references: [id])
  pricingId   String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pricing {
  id        String   @id @default(uuid())
  setup     String
  messaging String
  note      String
  package   Package?
}

model BusinessApi {
  id          String   @id @default(uuid())
  title       String
  description String
  price       String
  file        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
